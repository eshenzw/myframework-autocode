package ${classPackage}.mapper;

import java.util.List;
import java.util.Map;
import java.lang.Long;
import org.apache.ibatis.annotations.Param;
import ${classPackage}.pojo.${className};

/**
 * Created by zhaowei on ${.now?date}
 * bean created by mybatis
 */
public interface ${daoName} {
    /**
     * 根据参数获取对象列表
     *
     * @param params
     * @return
     */
    public List<${className}> list(Map<String, Object> params);

    /**
     * 根据参数获取对象列表结果总数
     *
     * @param params
     * @return
     */
    public int count(Map<String, Object> params);

    /**
     * 根据主键id获取对象
     *
     * @param id
     * @return
     */
    public ${className} get(@Param("id") Long id);

    /**
     * 根据对象插入*所有字段*到db
     *
     * @param ${classObjectName}
     * @return 插入结果（数量）
     */
    public int insert(${className} ${classObjectName});

    /**
     * 根据对象有选择性的只插入*字段不为空*到db
     *
     * @param ${classObjectName}
     * @return 插入结果（数量）
     */
    public int insertSelective(${className} ${classObjectName});

    /**
     * 根据主键ID查询并*更新所有字段*到db
     *
     * @param ${classObjectName}
     * @return 更新结果（数量）
     */
    public int update(${className} ${classObjectName});

    /**
     * 根据主键ID查询并有选择性的只更新*字段不为空*到db
     *
     * @param ${classObjectName}
     * @return 更新结果（数量）
     */
    public int updateSelective(${className} ${classObjectName});

    /**
     * 根据主键ID查询并删除对象
     *
     * @param id
     * @return 删除结果（数量）
     */
    public int delete(@Param("id") Long id);

    /**
     * 根据主键ID查询并删除对象
     * 批量删除ID
     *
     * @param ids
     * @return 删除结果（数量）
     */
    public int batchDelete(@Param("ids") Long[] ids);

    /**
     * 根据对象批量插入*所有字段*到db
     *
     * @param list
     * @return 插入结果（数量）
     * @deprecated 已经被删除的方法
     */
    public int batchInsert(@Param("list") List<${className}> list);

    /**
     * 根据对象批量更新*所有字段*到db
     *
     * @param list
     * @return 更新结果（数量）
     * @deprecated 已经被删除的方法
     */
    public int batchUpdate(@Param("list") List<${className}> list);
}